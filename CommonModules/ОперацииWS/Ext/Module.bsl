
Функция ОбработатьОперацию(ИмяОперации, Параметры) Экспорт
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Параметры);
	СтруктураПараметров = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
	ЧтениеXML.Закрыть();
	
	Если ИмяОперации = "Логин" Тогда
		                                   
		Результат = ВыполнитьОперациюВход(СтруктураПараметров);
		
	ИначеЕсли ИмяОперации = "ПолучитьВрачейПациента" Тогда
		                                   
		Результат = ВыполнитьОперациюПолучитьВрачейПацента(СтруктураПараметров);
		
	ИначеЕсли ИмяОперации = "ПолучитьДатыВрачей" Тогда
		                                   
		Результат = ВыполнитьОперациюПолучитьДатыВрачей(СтруктураПараметров);
		
	ИначеЕсли ИмяОперации = "ВыполнитьЗаписьНаПрием" Тогда
		                                   
		Результат = ВыполнитьОперациюЗаписьНаПрием(СтруктураПараметров);
		
		
	ИначеЕсли ИмяОперации = "ПолучитьДанныеРецептовПациента" Тогда
		                                   
		Результат = ПолучитьДанныеРецептовПациента(СтруктураПараметров);
		
	Иначе
		
		//Неизвестная операция
		Результат = НеизвестнаяОперация();
		
	КонецЕсли; 
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Результат, НазначениеТипаXML.Явное);
	
	Возврат ЗаписьXML.Закрыть();
	
КонецФункции // ОбработатьОперацию()

Функция ПодготовитьДанныеДляВводаОперации(ИмяОперации) Экспорт
	
	//Если ИмяОперации = "ПередачаЖивотногоНаУбой" Тогда
	//	                                   
	//	Результат = ПодготовитьДанныеДляОперацииПоПередачеЖивотногоНаУбой();
	//	
	//ИначеЕсли ИмяОперации = "ПередачаТушиВХолодильнуюКамеру" Тогда
	//	                                   
	//	Результат = ПодготовитьДанныеДляОперацииПередачиТушиВХолодильнуюКамеру();
	//	
	//ИначеЕсли ИмяОперации = "ПередачаОтрубовНаСклад"
	//	ИЛИ ИмяОперации = "ПередачаОтрубовВПереработку" Тогда
	//	                                   
	//	Результат = ПодготовитьДанныеДляОперацииПередачиОтрубов(ИмяОперации);
	//	
	//ИначеЕсли ИмяОперации = "ПередачаТушиНаОбвалку" Тогда
	//	                                   
	//	Результат = ПодготовитьДанныеДляОперацииПередачиТушиНаОбвалку();
	//	
	//ИначеЕсли ИмяОперации = "ПередачаТушНаРеализацию" Тогда
	//	                                   
	//	Результат = ПодготовитьДанныеДляОперацииПередачиТушНаРализацию();
	//	
	//ИначеЕсли ИмяОперации = "ПередачаСырьяОбвалки"
	//	ИЛИ ИмяОперации = "ВыпускОтрубовБезСерий" Тогда
	//	                                   
	//	Результат = ПодготовитьДанныеДляОперацийОбвалки();
	//	
	//ИначеЕсли ИмяОперации = "ПередачаВЗаморозку"
	//	ИЛИ ИмяОперации = "ПередачаИзЗаморозки" Тогда
	//	                                   
	//	Результат = ПодготовитьДанныеДляЗаморозки(ИмяОперации);
	//	
	//ИначеЕсли ИмяОперации = "Инвентаризация" Тогда
	//	                                   
	//	Результат = ПодготовитьДанныеДляОперацииИнвентаризация();
	//	
	//ИначеЕсли ИмяОперации = "СихронизацияНоменклатуры" Тогда
	//	                                   
	//	Результат = ПодготовитьДанныеДляОперацииСихронизацияНоменклатуры();
	//	
	//Иначе
	//	
	//	//Неизвестная операция
	//	Результат = НеизвестнаяОперация();
	//	
	//КонецЕсли; 

	//ЗаписьXML = Новый ЗаписьXML;
	//ЗаписьXML.УстановитьСтроку();
	//СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Результат, НазначениеТипаXML.Явное);
	//
	//Возврат ЗаписьXML.Закрыть();
	
КонецФункции // ПодготовитьДанныеДляВводаОперации()

/////////////////////////////////////
// Создание документов операций

Функция ВыполнитьОперациюВход(ПараметрыВызова)
	
	СтруктураВозврата = Новый Структура("ОписаниеДанных, ЕстьОшибки, ОписаниеОшибки", "", Ложь, "");
	
	Если НЕ ПараметрыВызова.Свойство("snils") Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Неверные параметры!";
		Возврат СтруктураВозврата;
	
	КонецЕсли;
	
	Пациент = Справочники.Пациенты.НайтиПоРеквизиту("СНИЛС", ПараметрыВызова.snils);
	Если НЕ ЗначениеЗаполнено(Пациент) Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Пациент в БД не найден!";
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	СтруктураВозврата.Вставить("НаименованиеПациента", Пациент.Наименование);
	СтруктураВозврата.Вставить("ПациентУИД", Пациент.УникальныйИдентификатор());
	
	Возврат СтруктураВозврата;
	
КонецФункции // СоздатьОперациюПриемаЖивотного()

Функция ВыполнитьОперациюПолучитьВрачейПацента(ПараметрыВызова)
	
	СтруктураВозврата = Новый Структура("ОписаниеДанных, ЕстьОшибки, ОписаниеОшибки", "", Ложь, "");
	
	Если НЕ ПараметрыВызова.Свойство("snils") Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Неверные параметры!";
		Возврат СтруктураВозврата;
	
	КонецЕсли;
	
	Пациент = Справочники.Пациенты.НайтиПоРеквизиту("СНИЛС", ПараметрыВызова.snils);
	Если НЕ ЗначениеЗаполнено(Пациент) Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Пациент в БД не найден!";
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	МассивСуществующихВКлиенте = Новый Массив; 
	МассивВрачейРасписания = Новый Массив;
	
	Если ПараметрыВызова.Свойство("МассивВрачейВКлиенте") Тогда
		
		Для каждого Врач Из ПараметрыВызова.МассивВрачейВКлиенте Цикл
			
			ВрачОбъект = Врач.ПолучитьОбъект();
			
			Если ВрачОбъект <> Неопределено Тогда
				
				МассивСуществующихВКлиенте.Добавить(Врач);
			
			КонецЕсли; 
		
		КонецЦикла; 
	
	КонецЕсли;
	
	ТаблицаВозврата = Новый ТаблицаЗначений;
	ТаблицаВозврата.Колонки.Добавить("УИД");
	ТаблицаВозврата.Колонки.Добавить("Наименование");
	ТаблицаВозврата.Колонки.Добавить("Специализация");
	ТаблицаВозврата.Колонки.Добавить("ДанныеКартинки");
	
	Если ЗначениеЗаполнено(ПараметрыВызова.ДатаЗаписи) Тогда
	
		ТаблицаВрачей = РаботаСРасписанием.ПолучитьПринимающихВрачейНаДату(Пациент.Поликлиника, ПараметрыВызова.ДатаЗаписи);
		
	Иначе
		
		ТаблицаВрачей = РаботаСРасписанием.ПолучитьВрачейПоликлиники(Пациент.Поликлиника);
	
	КонецЕсли; 
	
	Для каждого СтрокаТаблицы Из ТаблицаВрачей Цикл
		
		МассивВрачейРасписания.Добавить(СтрокаТаблицы.Врач);
		
		Если МассивСуществующихВКлиенте.Найти(СтрокаТаблицы.Врач) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;  
		
		СтрокаВозврата = ТаблицаВозврата.Добавить();
		СтрокаВозврата.УИД = XMLСтрока(СтрокаТаблицы.Врач);
		СтрокаВозврата.Наименование = СтрокаТаблицы.Врач.Наименование;
		СтрокаВозврата.Специализация = Строка(СтрокаТаблицы.Специализация);
		ВрачОбъект = СтрокаТаблицы.Врач.ПолучитьОбъект();
		ДанныеКартинки = ВрачОбъект.Фото.Получить();
		Если ДанныеКартинки <> Неопределено Тогда
			СтрокаДанныхКартинки = Base64Строка(ДанныеКартинки);	
		КонецЕсли; 
		СтрокаВозврата.ДанныеКартинки = СтрокаДанныхКартинки;
	
	КонецЦикла; 
	
	СтруктураВозврата.Вставить("Врачи", ТаблицаВозврата);
	СтруктураВозврата.Вставить("ВрачиРасписания", МассивВрачейРасписания);
	
	Возврат СтруктураВозврата;
	
КонецФункции 

Функция ВыполнитьОперациюПолучитьДатыВрачей(ПараметрыВызова)
	
	СтруктураВозврата = Новый Структура("ОписаниеДанных, ЕстьОшибки, ОписаниеОшибки", "", Ложь, "");
	
	Если НЕ ПараметрыВызова.Свойство("snils") Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Неверные параметры!";
		Возврат СтруктураВозврата;
	
	КонецЕсли;
	
	Пациент = Справочники.Пациенты.НайтиПоРеквизиту("СНИЛС", ПараметрыВызова.snils);
	Если НЕ ЗначениеЗаполнено(Пациент) Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Пациент в БД не найден!";
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГрафикиПриема.Дата КАК ДатаПриема,
		|	ГрафикиПриема.Время КАК Время
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		|	И ГрафикиПриема.Врач = &Врач
		|	И ГрафикиПриема.Дата >= &Дата
		|	И ГрафикиПриема.Прием = &ПустойПрием
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.УстановитьПараметр("Врач", ПараметрыВызова.Врач);
	Запрос.УстановитьПараметр("Поликлиника", Пациент.Поликлиника);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	
	ТаблицаВозврата = Запрос.Выполнить().Выгрузить();
	ТаблицаВозврата.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата", , ,
											 Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	
	Для каждого СтрокаТаблицы Из ТаблицаВозврата Цикл
		СтрокаТаблицы.Дата = СтрокаТаблицы.ДатаПриема + (СтрокаТаблицы.Время - НачалоДня(СтрокаТаблицы.Время));
	КонецЦикла; 
	
	СтруктураВозврата.Вставить("ТаблицаДат", ТаблицаВозврата);
	
	Возврат СтруктураВозврата;
	
КонецФункции 

Функция ВыполнитьОперациюЗаписьНаПрием(ПараметрыВызова)
	
	СтруктураВозврата = Новый Структура("ОписаниеДанных, ЕстьОшибки, ОписаниеОшибки", "", Ложь, "");
	
	Если НЕ ПараметрыВызова.Свойство("snils") Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Неверные параметры!";
		Возврат СтруктураВозврата;
	
	КонецЕсли;
	
	Пациент = Справочники.Пациенты.НайтиПоРеквизиту("СНИЛС", ПараметрыВызова.snils);
	Если НЕ ЗначениеЗаполнено(Пациент) Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Пациент в БД не найден!";
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	ДатаЗаписи = НачалоДня(ПараметрыВызова.ДатаЗаписи);
	ВремяЗаписи = '00010101' + (ПараметрыВызова.ДатаЗаписи - ДатаЗаписи);
	
	Запрос = Новый Запрос(ТекстЗапросаКабинетаИзРасписания()); 
	Запрос.УстановитьПараметр("Поликлиника", Пациент.Поликлиника);
	Запрос.УстановитьПараметр("Врач", ПараметрыВызова.Врач);
	Запрос.УстановитьПараметр("Дата", ДатаЗаписи);
	Запрос.УстановитьПараметр("Время", ВремяЗаписи);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДокументЗаписи = РаботаСЗаписьюНаПрием.ЗаписатьНаПрием(Пациент, 
			ПараметрыВызова.ДатаЗаписи, 
			ПараметрыВызова.Врач, 
			Пациент.Поликлиника, 
			Выборка.Кабинет
		); 
		
	Иначе
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "При создании записи возникла ошибка";
		Возврат СтруктураВозврата;
		
	КонецЕсли; 	
	
	Сообщение = "Создана запись на прием " + Строка(ДокументЗаписи);
	СтруктураВозврата.Вставить("ОписаниеДанных", Сообщение);
	
	Возврат СтруктураВозврата;
	
КонецФункции 

Функция ПолучитьДанныеРецептовПациента(ПараметрыВызова)
	
	СтруктураВозврата = Новый Структура("ОписаниеДанных, ЕстьОшибки, ОписаниеОшибки", "", Ложь, "");
	
	Если НЕ ПараметрыВызова.Свойство("snils") Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Неверные параметры!";
		Возврат СтруктураВозврата;
	
	КонецЕсли;
	
	Пациент = Справочники.Пациенты.НайтиПоРеквизиту("СНИЛС", ПараметрыВызова.snils);
	Если НЕ ЗначениеЗаполнено(Пациент) Тогда
		
		СтруктураВозврата.ЕстьОшибки = Истина;
		СтруктураВозврата.ОписаниеОшибки = "Пациент в БД не найден!";
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	МассивТаблиц = РаботаСРасписанием.ПолучитьВсюИнформациюПоРецептам(Пациент);
	СтруктураВозврата.Вставить("ТаблицаРецептов", МассивТаблиц[0]);
	СтруктураВозврата.Вставить("ТаблицаЛекарств", МассивТаблиц[1]);
	СтруктураВозврата.Вставить("ТаблицаЦен", МассивТаблиц[2]);
	
	Возврат СтруктураВозврата;
	
КонецФункции 


Функция НеизвестнаяОперация()
	
	СтруктураВозврата = Новый Структура("ЕстьОшибки, ОписаниеОшибки", Истина, "Передана неизвестная операция");
	
	Возврат СтруктураВозврата;
	
КонецФункции // НеизвестнаяОперация()


/////////////////////////////////////
// Формирование данных для операций



Функция ПодготовитьДанныеДляОперацииПоПередачеЖивотногоНаУбой()

	СтруктураВозврата = Новый Структура("ОписаниеДанных, ЕстьОшибки, ОписаниеОшибки, Данные, ЗапрашиватьВес", 
		"", Ложь, "", Неопределено);
	
	//СтруктураВозврата.Вставить("Данные", Новый ХранилищеЗначения(ТаблицаЗабоя, Новый СжатиеДанных(9)));
	
	Возврат СтруктураВозврата;
	
КонецФункции // ()


Функция ТекстЗапросаКабинетаИзРасписания()
	
	Возврат
	"ВЫБРАТЬ
	|	ГрафикиПриема.Кабинет КАК Кабинет
	|ИЗ
	|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
	|ГДЕ
	|	ГрафикиПриема.Поликлиника = &Поликлиника
	|	И ГрафикиПриема.Врач = &Врач
	|	И ГрафикиПриема.Дата = &Дата
	|	И ГрафикиПриема.Время = &Время
	|	И ГрафикиПриема.Прием = ЗНАЧЕНИЕ(Документ.Прием.ПустаяСсылка)";
	
КонецФункции // ()
 

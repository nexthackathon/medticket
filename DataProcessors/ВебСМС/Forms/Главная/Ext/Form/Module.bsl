&НаСервереБезКонтекста 
Функция ПолучитьСписокИменОтправителя(Логин1, Пароль1)
	Перем Определения1;
	Перем Прокси1;
	Перем xmlDoc1;
	Перем Сп;
	Перем Результат1;
	Перем nodeRoot1;
	xmlDoc1 = Новый COMОбъект("MSXML2.DOMDocument");	
	Сп = Новый СписокЗначений;
	Попытка
		Определения1 = Новый WSОпределения("http://smpp3.websms.ru:8183/soap?WSDL");	
		Прокси1      = Новый WSПрокси(Определения1, "http://ws.com/", "WebsmsSoapServService", "WebsmsSoapServPort");
		Результат1 = Прокси1.getFromList(Логин1,Пароль1);
		xmlDoc1.LoadXML(Результат1);
		nodeRoot1 = xmlDoc1.documentElement;
		Для Каждого nod ИЗ nodeRoot1.childNodes Цикл
			Если nod.nodeName = "item" тогда 
	   			  Сп.Добавить(nod.text);
			Иначе 
				Если nod.nodeName = "error" тогда
					Сообщить("Проверьте имя входа и пароль!");
					Break;
				КонецЕсли;				  
			КонецЕсли;
		КонецЦикла;	
	Исключение
	    Сообщить("Соединение с сервером websms не установлено. Проверьте соединение с сетью Интернет!");
	КонецПопытки;
	Прокси1 = Неопределено;
	Определения1 = Неопределено;
	xmlDoc1 = Неопределено;
	Возврат Сп;	
КонецФункции

&НаСервереБезКонтекста 
Функция ПолучитьБаланс(Логин, Пароль)
	Перем Определения;
	Перем Прокси;
	Перем xmlDoc;
	Перем balance;
	Перем Результат;
	Перем nodeRoot;
	balance = 0;
	xmlDoc = Новый COMОбъект("MSXML2.DOMDocument");	
	Сп = Новый СписокЗначений;
	Попытка
		Определения = Новый WSОпределения("http://smpp3.websms.ru:8183/soap?WSDL");	
		Прокси      = Новый WSПрокси(Определения, "http://ws.com/", "WebsmsSoapServService", "WebsmsSoapServPort");
		Результат = Прокси.getBalance(Логин,Пароль);
		xmlDoc.LoadXML(Результат);
		nodeRoot = xmlDoc.documentElement;
		Для Каждого nod ИЗ nodeRoot.childNodes Цикл
			Если nod.nodeName = "balance" тогда 
	   			  balance = nod.text;
			КонецЕсли;
		КонецЦикла;	
	Исключение
	    Сообщить("Соединение с сервером websms не установлено. Проверьте соединение с сетью Интернет!");
	КонецПопытки;
	Прокси = Неопределено;
	Определения = Неопределено;
	xmlDoc = Неопределено;
	Возврат balance;	
КонецФункции

&НаСервереБезКонтекста 
Функция Отправить_СМС(Логин, Пароль, SMSArray, ИмяОтправ, GMT, ТолькоПроверить)
	Перем Определения;
	Перем Прокси;
	Перем xmlDoc;
	Перем nodeRoot;
	Перем Телефон1;
	Перем ResStruct;
	Перем ResArray;
	Перем Результат;
	Перем k;
	Перем Назначено;
	
	ResArray = новый массив;
	Попытка
		Определения = Новый WSОпределения("http://smpp3.websms.ru:8183/soap?WSDL");	
		Прокси      = Новый WSПрокси(Определения, "http://ws.com/", "WebsmsSoapServService", "WebsmsSoapServPort");
		xmlDoc = Новый COMОбъект("MSXML2.DOMDocument");
		Попытка
			Для k=0 По SMSArray.Количество()-1 Цикл
				Телефон1 = СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(SMSArray[k].Получатель,"-",""),"(",""),")","")," ",""),"+","");	
				Если СтрДлина(Телефон1)>10  тогда
					ResStruct = Новый структура("id, IDСообщения, Состояние, ДатаРассылки"); 
					ResStruct.id = SMSArray[k].id;
					ResStruct.IDСообщения = 0;
					ResStruct.Состояние = "Не отправлено";
					ResStruct.ДатаРассылки = ТекущаяДата();
					Если SMSArray[k].ДатаРассылки = Неопределено Тогда
						Назначено = Формат(ТекущаяДата(),"ДФ=дд.ММ.гггг чч:мм");
					Иначе
						Назначено = Формат(SMSArray[k].ДатаРассылки,"ДФ=дд.ММ.гггг чч:мм");
					КонецЕсли;	
					Результат = Прокси.sendSMS( Логин, Пароль, ИмяОтправ, SMSArray[k].ТекстСообщения, Телефон1, 0, 0, Назначено, GMT, ТолькоПроверить); 
					// Сообщить(Результат);					
					xmlDoc.LoadXML(Результат);
					nodeRoot = xmlDoc.documentElement;
					Для Каждого nod ИЗ nodeRoot.childNodes Цикл
						Для Каждого chNod ИЗ nod.childNodes Цикл
							Если chNod.nodeName = "systemId" тогда 
								ResStruct.IDСообщения = chNod.text;
							КонецЕсли;
							Если chNod.nodeName = "state" тогда 
								ResStruct.Состояние = chNod.text;
								Если chNod.text = "Accepted" Тогда
									Если Число(ResStruct.IDСообщения)>0 Тогда
										ResStruct.Состояние = "Принято системой";
									Иначе
										ResStruct.Состояние = "Проверено";
									КонецЕсли;
								Иначе
									ResStruct.Состояние = "Отклонено";
								КонецЕсли;	
							КонецЕсли;
						КонецЦикла;	
					КонецЦикла;	
					ResArray.Добавить(ResStruct); 
				Иначе	
					Сообщить("Номер не может быть использован при отправке сообщения: "+Телефон1);
				КонецЕсли;
			КонецЦикла;
		Исключение
   			Сообщить(ОписаниеОшибки());
		КонецПопытки;	
	Исключение
	    Сообщить("Соединение с сервером websms не установлено. Проверьте соединение с сетью Интернет!");
	КонецПопытки;	
	
	Прокси = Неопределено;
	Определения = Неопределено;
	xmlDoc = Неопределено;
	Возврат ResArray;
КонецФункции

&НаСервереБезКонтекста 
Функция Получить_Состояние(Логин, Пароль, SMSArray)
	Перем Определения;
	Перем Прокси;
	Перем xmlDoc;
	Перем nodeRoot;
	Перем ResStruct;
	Перем ResArray;
	Перем Результат;
	Перем k;
	Перем Назначено;
	
	ResArray = новый массив;
	Попытка
		Определения = Новый WSОпределения("http://smpp3.websms.ru:8183/soap?WSDL");	
		Прокси      = Новый WSПрокси(Определения, "http://ws.com/", "WebsmsSoapServService", "WebsmsSoapServPort");
		xmlDoc = Новый COMОбъект("MSXML2.DOMDocument");
		Попытка
			Для k=0 По SMSArray.Количество()-1 Цикл
				Если Число(SMSArray[k].IDСообщения)>0  тогда
					ResStruct = Новый структура("id, Состояние, ДатаДоставки"); 
					ResStruct.id = SMSArray[k].id;
					ResStruct.Состояние = "";
					
					Результат = Прокси.getStatus(Логин, Пароль, Число(SMSArray[k].IDСообщения), 0, 0, 0);
					xmlDoc.LoadXML(Результат);
					nodeRoot = xmlDoc.documentElement;
					Для Каждого nod ИЗ nodeRoot.childNodes Цикл
						Для Каждого chNod ИЗ nod.childNodes Цикл
							Если chNod.nodeName = "status_id" тогда 
								Если chNod.text = "6" Тогда
									ResStruct.Состояние = "Доставлено";
								ИначеЕсли chNod.text = "7" Тогда
									ResStruct.Состояние = "НЕ доставлено";
								ИначеЕсли chNod.text = "4" ИЛИ chNod.text = "3" ИЛИ chNod.text = "8" Тогда
									ResStruct.Состояние = "Передано оператору";
								ИначеЕсли chNod.text = "2" Тогда
									ResStruct.Состояние = "Готово к отправке";
								ИначеЕсли chNod.text = "10" Тогда
									ResStruct.Состояние = "Не принято системой";
								ИначеЕсли chNod.text = "11" Тогда
									ResStruct.Состояние = "Время истекло";
								ИначеЕсли chNod.text = "14" Тогда
									ResStruct.Состояние = "Закрытое направление";
								ИначеЕсли chNod.text = "15" Тогда
									ResStruct.Состояние = "Неизвестное направление";
								Иначе 
									ResStruct.Состояние = "Статус не получен";
								КонецЕсли	
							КонецЕсли;
							Если chNod.nodeName = "deliver_date" тогда 
								Если chNod.text <> "" Тогда
									try
										ResStruct.ДатаДоставки = Дата(СтрЗаменить(СтрЗаменить(СтрЗаменить(Лев(chNod.text,19),"-",""),":","")," ",""));
									except
										Сообщить("Incorrect delivered data format: "+chNod.text);
									endtry;
								КонецЕсли	
							КонецЕсли;
						КонецЦикла;	
					КонецЦикла;	
					ResArray.Добавить(ResStruct); 
				КонецЕсли;
			КонецЦикла;
		Исключение
   			Сообщить(ОписаниеОшибки());
		КонецПопытки;	
	Исключение
	    Сообщить("Соединение с сервером websms не установлено. Проверьте соединение с сетью Интернет!");
	КонецПопытки;	
	
	Прокси = Неопределено;
	Определения = Неопределено;
	xmlDoc = Неопределено;
	Возврат ResArray;
КонецФункции


&НаКлиенте
Процедура ВызватьФункциюПолученияСпискаИменОтпр(Команда)
	СписокИмен.ЗагрузитьЗначения(ПолучитьСписокИменОтправителя(Login, Password).ВыгрузитьЗначения());
	Сообщить(СписокИмен);
КонецПроцедуры

&НаКлиенте
Процедура ВызватьФункциюОтправкиСМС(Команда)
	Перем ИмяОтправ;
	Перем МассивСМС;
	Перем Резлт;
	Перем СтруктСМС; 
	Перем i;
	
	Если ЭтаФорма.Элементы.ТаблицаИменаОтправителей.ТекущаяСтрока<>Неопределено тогда
		ИмяОтправ = СписокИмен.Получить(ЭтаФорма.Элементы.ТаблицаИменаОтправителей.ТекущаяСтрока).Значение;
	КонецЕсли;	
	Если ПустаяСтрока(ИмяОтправ) тогда
		ИмяОтправ = "WEBSMS";
	КонецЕсли;	
	
	МассивСМС = новый массив;
	Для i=0 По ТЗ_СМС.Количество()-1 Цикл
		СтруктСМС = Новый структура("id, Получатель, ТекстСообщения, ДатаРассылки");
		СтруктСМС.id = i; 
		СтруктСМС.Получатель = ТЗ_СМС[i].Получатель; 
		СтруктСМС.ТекстСообщения = ТЗ_СМС[i].ТекстСообщения;             
		СтруктСМС.ДатаРассылки = ТЗ_СМС[i].ДатаРассылки;             
		МассивСМС.Добавить(СтруктСМС); 
	КонецЦикла;
		
	Резлт = Отправить_СМС(Login, Password, МассивСМС, ИмяОтправ, 4, 0); 
	
	Для i=0 По Резлт.Количество()-1 Цикл
		ТЗ_СМС[Резлт[i].id].Состояние    = Резлт[i].Состояние;  
		ТЗ_СМС[Резлт[i].id].IDСообщения  = Резлт[i].IDСообщения;  
		ТЗ_СМС[Резлт[i].id].ДатаРассылки = Резлт[i].ДатаРассылки;  
	КонецЦикла;  	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВызватьФункциюПолучитьБаланс(Команда)
	Баланс = Формат(ПолучитьБаланс(Login, Password),"ЧДЦ=2");
КонецПроцедуры

&НаКлиенте
Процедура КомандаВызватьФункциюСостояние(Команда)
	Перем МассивСМС;
	Перем Резлт;
	Перем СтруктСМС; 
	Перем i;
	
	МассивСМС = новый массив;
	Для i=0 По ТЗ_СМС.Количество()-1 Цикл
		Если (Число(ТЗ_СМС[i].IDСообщения)>0) И (ТЗ_СМС[i].Состояние="Принято системой" ИЛИ ТЗ_СМС[i].Состояние="Передано оператору" ИЛИ ТЗ_СМС[i].Состояние="Готово к отправке" ИЛИ ТЗ_СМС[i].Состояние="Статус не получен" ИЛИ ТЗ_СМС[i].Состояние="Accepted") тогда
			СтруктСМС = Новый структура("id, IDСообщения");
			СтруктСМС.id = i; 
			СтруктСМС.IDСообщения = ТЗ_СМС[i].IDСообщения; 
			МассивСМС.Добавить(СтруктСМС); 
		КонецЕсли;
	КонецЦикла;
		
	Резлт = Получить_Состояние(Login, Password, МассивСМС); 
	
	Для i=0 По Резлт.Количество()-1 Цикл
		Если Резлт[i].Состояние<>"" Тогда
			ТЗ_СМС[Резлт[i].id].Состояние    = Резлт[i].Состояние;  
			ТЗ_СМС[Резлт[i].id].ДатаДоставки = Резлт[i].ДатаДоставки;  
		КонецЕсли;
	КонецЦикла;  		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтправитьТестНаСервере()
	МодульРегламентныхЗаданий.ОтправитьСМС("+79038260260","тест");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьТест(Команда)
	ОтправитьТестНаСервере();
КонецПроцедуры

Функция ПолучитьДатыПриемаВрача(Поликлиника,Врач) Экспорт//+
	Результат=Новый ТаблицаЗначений;
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГрафикиПриема.Дата КАК Дата
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		|	И ГрафикиПриема.Врач = &Врач
		|	И ГрафикиПриема.Дата >= &Дата
		|	И ГрафикиПриема.Прием = &ПустойПрием
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.УстановитьПараметр("Врач", Врач);
	Запрос.УстановитьПараметр("Поликлиника", Поликлиника);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;
КонецФункции

Функция ПолучитьВремяПриемаВрачаНаДату(Поликлиника,Врач,ДатаПриема) Экспорт//+
	
	Результат=Новый ТаблицаЗначений;
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГрафикиПриема.Время КАК Время,
		|	ГрафикиПриема.Время КАК ВремяПриема,
		|	ГрафикиПриема.Дата КАК Дата,
		|	ГрафикиПриема.Дата КАК ДатаПриема,
		|	ГрафикиПриема.Кабинет КАК Кабинет,
		|	ГрафикиПриема.Врач КАК Врач
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		|	И ГрафикиПриема.Врач = &Врач
		|	И ГрафикиПриема.Прием = &ПустойПрием
		|	И НАЧАЛОПЕРИОДА(ГрафикиПриема.Дата, ДЕНЬ) = &Дата
		|
		|УПОРЯДОЧИТЬ ПО
		|	Время";
	
	Запрос.УстановитьПараметр("Врач", Врач);
	Запрос.УстановитьПараметр("Поликлиника", Поликлиника);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", НачалоДня(ДатаПриема));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;
КонецФункции

Функция ПолучитьСписокВрачейПоДатеИСпециализации(Поликлиника,Специализация,ДатаПриема) Экспорт
	Результат=Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГрафикиПриема.Время КАК Время,
		|	ГрафикиПриема.Врач КАК Врач,
		|	ГрафикиПриема.Дата КАК Дата,
		|	ГрафикиПриема.Кабинет КАК Кабинет
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		|	И ГрафикиПриема.Дата = &Дата
		|	И ГрафикиПриема.Прием = &ПустойПрием
		|	И ГрафикиПриема.Врач.Специализация = &Специализация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Время,
		|	Врач";
	
	Запрос.УстановитьПараметр("Поликлиника", Поликлиника);
	Запрос.УстановитьПараметр("Специализация", Специализация);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата",ДатаПриема);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;
КонецФункции

Функция ПолучитьСписокБлижайшихВрачейПоСпециализации(Поликлиника,Специализация) Экспорт
	Результат=Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГрафикиПриема.Время КАК Время,
		|	ГрафикиПриема.Врач КАК Врач,
		|	ГрафикиПриема.Дата КАК Дата
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		|	И ГрафикиПриема.Дата >= &Дата
		|	И ГрафикиПриема.Прием = &ПустойПрием
		|	И ГрафикиПриема.Врач.Специализация = &Специализация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Время,
		|	Врач";
	
	Запрос.УстановитьПараметр("Поликлиника", Поликлиника);
	Запрос.УстановитьПараметр("Специализация", Специализация);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата",НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;
КонецФункции

Функция ПолучитьПринимающихВрачейНаДату(Поликлиника,ДатаПриема) Экспорт//+
	Результат=Новый ТаблицаЗначений;
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГрафикиПриема.Врач КАК Врач
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		|	И ГрафикиПриема.Прием = &ПустойПрием
		|	И НАЧАЛОПЕРИОДА(ГрафикиПриема.Дата, ДЕНЬ) = &Дата
		|
		|УПОРЯДОЧИТЬ ПО
		|	Врач";
	
	Запрос.УстановитьПараметр("Поликлиника", Поликлиника);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", НачалоДня(ДатаПриема));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;
КонецФункции

Функция ПолучитьВрачейПоликлиники(Поликлиника) Экспорт//+
	Результат=Новый ТаблицаЗначений;
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГрафикиПриема.Врач КАК Врач,
		|	ГрафикиПриема.Врач.Специализация.Представление КАК Специализация
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		//|	И ГрафикиПриема.Дата >= &Дата
		//|	И ГрафикиПриема.Прием = &ПустойПрием
		|";
	
	Запрос.УстановитьПараметр("Поликлиника", Поликлиника);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;
КонецФункции

Функция ПолучитьСписокСпециализацийПоликлиники(Поликлиника) Экспорт
	Результат=Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГрафикиПриема.Врач.Специализация КАК Специализация
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		//|	И ГрафикиПриема.Дата >= &Дата
		//|	И ГрафикиПриема.Прием = &ПустойПрием
		|";
	
	Запрос.УстановитьПараметр("Поликлиника", Поликлиника);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;	
	
КонецФункции

Функция ПолучитьДатыПоСпециализации(Поликлиника,Специализация) Экспорт
	Результат=Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГрафикиПриема.Дата КАК Дата
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		|	И ГрафикиПриема.Дата >= &Дата
		|	И ГрафикиПриема.Прием = &ПустойПрием
		|	И ГрафикиПриема.Врач.Специализация = &Специализация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.УстановитьПараметр("Поликлиника", Поликлиника);
	Запрос.УстановитьПараметр("Специализация", Специализация);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;	
КонецФункции

Функция ПолучитьВрачейПоСпециализации(Поликлиника,Специализация) Экспорт//+
	Результат=Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГрафикиПриема.Врач КАК Врач
		|ИЗ
		|	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
		|ГДЕ
		|	ГрафикиПриема.Поликлиника = &Поликлиника
		|	И ГрафикиПриема.Врач.Специализация = &Специализация
		//|	И ГрафикиПриема.Прием = &ПустойПрием
		|";
	
	Запрос.УстановитьПараметр("Поликлиника", Поликлиника);
	Запрос.УстановитьПараметр("Специализация", Специализация);
	Запрос.УстановитьПараметр("ПустойПрием", Документы.Прием.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;
КонецФункции

Функция ПолучитьСписокПоследнихВрачейПоПациенту(Пациент) Экспорт//+
	Результат=Новый ТаблицаЗначений;
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	Прием.Врач КАК Врач,
	                    |	Прием.ДатаПриема КАК ДатаПриема,
	                    |	Прием.Кабинет КАК Кабинет
	                    |ИЗ
	                    |	Документ.Прием КАК Прием
	                    |ГДЕ
	                    |	Прием.Пациент = &Пациент
	                    |	И Прием.ДатаПриема < &Дата
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	ДатаПриема УБЫВ");
	
	Запрос.УстановитьПараметр("Пациент",Пациент);
	Запрос.УстановитьПараметр("Дата",НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	
	Возврат Результат;	
КонецФункции

Функция ПолучитьРецептыПациента(Пациент) Экспорт//+
	Результат=Новый ТаблицаЗначений;
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	Рецепт.Ссылка КАК Рецепт
	                    |ИЗ
	                    |	Документ.Рецепт КАК Рецепт
	                    |ГДЕ
	                    |	Рецепт.Прием.Пациент = &Пациент
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Рецепт.Дата УБЫВ");
	Запрос.УстановитьПараметр("Пациент",Пациент);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	
	Возврат Результат;	
КонецФункции

Функция ПолучитьВсюИнформациюПоРецептам(Пациент) Экспорт
	Результат=Новый Массив;
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	РецептЛекарства.Лекарство КАК Лекарство,
	                    |	РецептЛекарства.Количество КАК Количество,
	                    |	РецептЛекарства.Ссылка КАК Рецепт
	                    |ПОМЕСТИТЬ СписокЛекарств
	                    |ИЗ
	                    |	Документ.Рецепт.Лекарства КАК РецептЛекарства
	                    |ГДЕ
	                    |	РецептЛекарства.Ссылка.Прием.Пациент = &Пациент
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ВложенныйЗапрос1.Аптека КАК Аптека,
	                    |	ВложенныйЗапрос1.Рецепт КАК Рецепт
	                    |ПОМЕСТИТЬ АптекиСПолнымКомплектом
	                    |ИЗ
	                    |	(ВЫБРАТЬ
	                    |		ЦеныНаЛекарстваСрезПоследних.Аптека КАК Аптека,
	                    |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание) КАК КоличествоВАптеке,
	                    |		ВложенныйЗапрос.КоличествоПозицийВРецепте КАК КоличествоПозицийВРецепте,
	                    |		ВложенныйЗапрос.Рецепт КАК Рецепт
	                    |	ИЗ
	                    |		РегистрСведений.ЦеныНаЛекарства.СрезПоследних(
	                    |				,
	                    |				Лекарство.МеждународноеНепатентованноеНазвание В
	                    |					(ВЫБРАТЬ
	                    |						СписокЛекарств.Лекарство КАК Лекарство
	                    |					ИЗ
	                    |						СписокЛекарств КАК СписокЛекарств)) КАК ЦеныНаЛекарстваСрезПоследних
	                    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                    |				СписокЛекарств.Лекарство КАК Лекарство,
	                    |				СписокЛекарств.Количество КАК Количество,
	                    |				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписокЛекарств1.Лекарство) КАК КоличествоПозицийВРецепте,
	                    |				СписокЛекарств.Рецепт КАК Рецепт
	                    |			ИЗ
	                    |				СписокЛекарств КАК СписокЛекарств
	                    |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокЛекарств КАК СписокЛекарств1
	                    |					ПО (ИСТИНА)
	                    |						И СписокЛекарств.Рецепт = СписокЛекарств1.Рецепт
	                    |			
	                    |			СГРУППИРОВАТЬ ПО
	                    |				СписокЛекарств.Лекарство,
	                    |				СписокЛекарств.Количество,
	                    |				СписокЛекарств.Рецепт) КАК ВложенныйЗапрос
	                    |			ПО ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание = ВложенныйЗапрос.Лекарство
	                    |	ГДЕ
	                    |		ЦеныНаЛекарстваСрезПоследних.Доступно
	                    |	
	                    |	СГРУППИРОВАТЬ ПО
	                    |		ЦеныНаЛекарстваСрезПоследних.Аптека,
	                    |		ВложенныйЗапрос.КоличествоПозицийВРецепте,
	                    |		ВложенныйЗапрос.Рецепт) КАК ВложенныйЗапрос1
	                    |ГДЕ
	                    |	ВложенныйЗапрос1.КоличествоВАптеке = ВложенныйЗапрос1.КоличествоПозицийВРецепте
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	АптекиСПолнымКомплектом.Аптека КАК Аптека,
	                    |	СписокЛекарств.Лекарство КАК Лекарство,
	                    |	СписокЛекарств.Количество КАК Количество,
	                    |	СписокЛекарств.Рецепт КАК Рецепт
	                    |ПОМЕСТИТЬ АптекиЛекарства
	                    |ИЗ
	                    |	СписокЛекарств КАК СписокЛекарств
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиСПолнымКомплектом КАК АптекиСПолнымКомплектом
	                    |		ПО СписокЛекарств.Рецепт = АптекиСПолнымКомплектом.Рецепт
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ЦеныНаЛекарстваСрезПоследних.Аптека КАК Аптека,
	                    |	ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание КАК Лекарство,
	                    |	МИНИМУМ(ЦеныНаЛекарстваСрезПоследних.Цена) КАК Цена,
	                    |	АптекиЛекарства.Количество КАК Количество,
	                    |	АптекиЛекарства.Рецепт КАК Рецепт
	                    |ПОМЕСТИТЬ МинимальныеЦеныВАптеках
	                    |ИЗ
	                    |	РегистрСведений.ЦеныНаЛекарства.СрезПоследних(
	                    |			,
	                    |			(Аптека, Лекарство.МеждународноеНепатентованноеНазвание) В
	                    |				(ВЫБРАТЬ
	                    |					АптекиСПолнымКомплектом.Аптека КАК Аптека,
	                    |					СписокЛекарств.Лекарство КАК Лекарство
	                    |				ИЗ
	                    |					АптекиСПолнымКомплектом КАК АптекиСПолнымКомплектом,
	                    |					СписокЛекарств КАК СписокЛекарств)) КАК ЦеныНаЛекарстваСрезПоследних
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиЛекарства КАК АптекиЛекарства
	                    |		ПО ЦеныНаЛекарстваСрезПоследних.Аптека = АптекиЛекарства.Аптека
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ЦеныНаЛекарстваСрезПоследних.Аптека,
	                    |	ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание,
	                    |	АптекиЛекарства.Количество,
	                    |	АптекиЛекарства.Рецепт
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	СписокЛекарств.Рецепт.Представление КАК Рецепт,
	                    |	СписокЛекарств.Рецепт КАК РецептСсылка
	                    |ИЗ
	                    |	СписокЛекарств КАК СписокЛекарств
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	СписокЛекарств.Рецепт КАК РецептСсылка,
	                    |	СписокЛекарств.Лекарство.Представление КАК Лекарство,
	                    |	СписокЛекарств.Количество КАК Количество,
	                    |	СписокЛекарств.Рецепт.Представление КАК Рецепт
	                    |ИЗ
	                    |	СписокЛекарств КАК СписокЛекарств
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ ПЕРВЫЕ 10
	                    |	ВложенныйЗапрос.Аптека.Представление КАК Аптека,
	                    |	ВложенныйЗапрос.СтоимостьПакета КАК СтоимостьПакета,
	                    |	ВложенныйЗапрос.Рецепт КАК РецептСсылка,
	                    |	ВложенныйЗапрос.Рецепт.Представление КАК Рецепт
	                    |ИЗ
	                    |	(ВЫБРАТЬ
	                    |		МинимальныеЦеныВАптеках.Аптека КАК Аптека,
	                    |		СУММА(МинимальныеЦеныВАптеках.Цена * МинимальныеЦеныВАптеках.Количество) КАК СтоимостьПакета,
	                    |		МинимальныеЦеныВАптеках.Рецепт КАК Рецепт
	                    |	ИЗ
	                    |		МинимальныеЦеныВАптеках КАК МинимальныеЦеныВАптеках
	                    |	
	                    |	СГРУППИРОВАТЬ ПО
	                    |		МинимальныеЦеныВАптеках.Аптека,
	                    |		МинимальныеЦеныВАптеках.Рецепт) КАК ВложенныйЗапрос
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	СтоимостьПакета");
	
	Запрос.УстановитьПараметр("Пациент",Пациент);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	//Если РезультатыЗапроса.Количество() тогда
		
		ТЗ_Рецептов	=РезультатыЗапроса[4].Выгрузить();
		ТЗ_Лекарств	=РезультатыЗапроса[5].Выгрузить();
		ТЗ_Аптек	=РезультатыЗапроса[6].Выгрузить();
		
		ТЗ_Рецептов.Колонки.Добавить("ИДДокумента");
		ТЗ_Лекарств.Колонки.Добавить("ИДДокумента");
		ТЗ_Аптек.Колонки.Добавить("ИДДокумента");
		
		Для Каждого Стр из ТЗ_Рецептов цикл
			Стр.ИДДокумента=XMLСтрока(Стр.РецептСсылка);	
		КонецЦикла;
		
		Для Каждого Стр из ТЗ_Лекарств цикл
			Стр.ИДДокумента=XMLСтрока(Стр.РецептСсылка);	
		КонецЦикла;
		
		Для Каждого Стр из ТЗ_Аптек цикл
			Стр.ИДДокумента=XMLСтрока(Стр.РецептСсылка);	
		КонецЦикла;
		
		ТЗ_Рецептов.Колонки.Удалить("РецептСсылка");
		ТЗ_Лекарств.Колонки.Удалить("РецептСсылка");
		ТЗ_Аптек.Колонки.Удалить("РецептСсылка");
		
		Результат.Добавить(ТЗ_Рецептов);
		Результат.Добавить(ТЗ_Лекарств);
		Результат.Добавить(ТЗ_Аптек);
	//КонецЕсли;
	
	Возврат Результат;	
	
КонецФункции

Функция ПолучитьДанныеРецепта(Рецепт) Экспорт//+
	Результат=Новый ТаблицаЗначений;
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	РецептЛекарства.Лекарство КАК Лекарство,
	                    |	РецептЛекарства.Количество КАК Количество
	                    |ИЗ
	                    |	Документ.Рецепт.Лекарства КАК РецептЛекарства
	                    |ГДЕ
	                    |	РецептЛекарства.Ссылка = &Рецепт");
	Запрос.УстановитьПараметр("Рецепт",Рецепт);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	
	Возврат Результат;	
КонецФункции

Функция ОтправитьСМС(Телефон="89536543997",ТекстСообщения) Экспорт
	API_ID="50673DE6-CF1A-B2BF-FBEA-1ED01AB19D2C";
	АдресСервера="https://sms.ru";
	Попытка
		HTTPСоединение = Новый HTTPСоединение(АдресСервера);
		HTTPЗапрос = Новый HTTPЗапрос("https://sms.ru/sms/send?api_id="+API_ID+"&to="+
		Телефон+"&msg="+ТекстСообщения+"&json=0");
		HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);    
		ТекстОтвета = HTTPОтвет.ПолучитьТелоКакСтроку();
		
		Отправлено = ?(HTTPОтвет.КодСостояния = "200", Истина, Ложь);      
	Исключение
		Отправлено = Ложь;
	КонецПопытки;	
КонецФункции

Функция БлижайшаяДоступнаяДатаПриемаПосле(Дата,Врач) Экспорт
	Результат=Новый ТаблицаЗначений;
	
	Запрос=Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                    |	ГрафикиПриема.Дата КАК Дата,
	                    |	ГрафикиПриема.Время КАК Время
	                    |ИЗ
	                    |	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
	                    |ГДЕ
	                    |	ГрафикиПриема.Врач = &Врач
	                    |	И ГрафикиПриема.Дата > &Дата
	                    |	И ГрафикиПриема.Прием = &ПустойПрием
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Дата,
	                    |	Время");
	Запрос.УстановитьПараметр("Дата",НачалоДня(Дата));
	Запрос.УстановитьПараметр("Врач",Врач);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	
	Возврат Результат;		
КонецФункции

Функция БлижайшаяДоступнаяДатаПриемаПоСпециализации(Дата,Специализация) Экспорт
	Результат=Новый ТаблицаЗначений;
	
	Запрос=Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                    |	ГрафикиПриема.Дата КАК Дата,
	                    |	ГрафикиПриема.Время КАК Время,
	                    |	ГрафикиПриема.Поликлиника КАК Поликлиника,
	                    |	ГрафикиПриема.Врач КАК Врач
	                    |ИЗ
	                    |	РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
	                    |ГДЕ
	                    |	ГрафикиПриема.Врач.Специализация = &Специализация
	                    |	И ГрафикиПриема.Дата > &Дата
	                    |	И ГрафикиПриема.Прием = &ПустойПрием
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Дата,
	                    |	Время");
	
	Запрос.УстановитьПараметр("Дата",НачалоДня(Дата));
	Запрос.УстановитьПараметр("Специализация",Специализация);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	
	Возврат Результат;		
КонецФункции

Функция ПолучитьЛучшиеЦеныПокупкиРецепта(Рецепт) Экспорт
	Результат=Новый ТаблицаЗначений;
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	РецептЛекарства.Лекарство КАК Лекарство,
	                    |	РецептЛекарства.Количество КАК Количество
	                    |ПОМЕСТИТЬ СписокЛекарств
	                    |ИЗ
	                    |	Документ.Рецепт.Лекарства КАК РецептЛекарства
	                    |ГДЕ
	                    |	РецептЛекарства.Ссылка = &Рецепт
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ВложенныйЗапрос1.Аптека КАК Аптека
	                    |ПОМЕСТИТЬ АптекиСПолнымКомплектом
	                    |ИЗ
	                    |	(ВЫБРАТЬ
	                    |		ЦеныНаЛекарстваСрезПоследних.Аптека КАК Аптека,
	                    |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание) КАК КоличествоВАптеке,
	                    |		ВложенныйЗапрос.КоличествоПозицийВРецепте КАК КоличествоПозицийВРецепте
	                    |	ИЗ
	                    |		РегистрСведений.ЦеныНаЛекарства.СрезПоследних(
	                    |				,
	                    |				Лекарство.МеждународноеНепатентованноеНазвание В
	                    |					(ВЫБРАТЬ
	                    |						СписокЛекарств.Лекарство КАК Лекарство
	                    |					ИЗ
	                    |						СписокЛекарств КАК СписокЛекарств)) КАК ЦеныНаЛекарстваСрезПоследних
	                    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                    |				СписокЛекарств.Лекарство КАК Лекарство,
	                    |				СписокЛекарств.Количество КАК Количество,
	                    |				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписокЛекарств1.Лекарство) КАК КоличествоПозицийВРецепте
	                    |			ИЗ
	                    |				СписокЛекарств КАК СписокЛекарств
	                    |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокЛекарств КАК СписокЛекарств1
	                    |					ПО (ИСТИНА)
	                    |			
	                    |			СГРУППИРОВАТЬ ПО
	                    |				СписокЛекарств.Лекарство,
	                    |				СписокЛекарств.Количество) КАК ВложенныйЗапрос
	                    |			ПО ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание = ВложенныйЗапрос.Лекарство
	                    |	ГДЕ
	                    |		ЦеныНаЛекарстваСрезПоследних.Доступно
	                    |	
	                    |	СГРУППИРОВАТЬ ПО
	                    |		ЦеныНаЛекарстваСрезПоследних.Аптека,
	                    |		ВложенныйЗапрос.КоличествоПозицийВРецепте) КАК ВложенныйЗапрос1
	                    |ГДЕ
	                    |	ВложенныйЗапрос1.КоличествоВАптеке = ВложенныйЗапрос1.КоличествоПозицийВРецепте
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ЦеныНаЛекарстваСрезПоследних.Аптека КАК Аптека,
	                    |	ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание КАК Лекарство,
	                    |	МИНИМУМ(ЦеныНаЛекарстваСрезПоследних.Цена) КАК Цена,
	                    |	СписокЛекарств.Количество КАК Количество
	                    |ПОМЕСТИТЬ МинимальныеЦеныВАптеках
	                    |ИЗ
	                    |	РегистрСведений.ЦеныНаЛекарства.СрезПоследних(
	                    |			,
	                    |			(Аптека, Лекарство.МеждународноеНепатентованноеНазвание) В
	                    |				(ВЫБРАТЬ
	                    |					АптекиСПолнымКомплектом.Аптека КАК Аптека,
	                    |					СписокЛекарств.Лекарство КАК Лекарство
	                    |				ИЗ
	                    |					АптекиСПолнымКомплектом КАК АптекиСПолнымКомплектом,
	                    |					СписокЛекарств КАК СписокЛекарств)) КАК ЦеныНаЛекарстваСрезПоследних
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиСПолнымКомплектом КАК АптекиСПолнымКомплектом
	                    |		ПО ЦеныНаЛекарстваСрезПоследних.Аптека = АптекиСПолнымКомплектом.Аптека
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокЛекарств КАК СписокЛекарств
	                    |		ПО ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание = СписокЛекарств.Лекарство
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ЦеныНаЛекарстваСрезПоследних.Аптека,
	                    |	СписокЛекарств.Количество,
	                    |	ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ ПЕРВЫЕ 10
	                    |	ВложенныйЗапрос.Аптека КАК Аптека,
	                    |	ВложенныйЗапрос.СтоимостьПакета КАК СтоимостьПакета
	                    |ИЗ
	                    |	(ВЫБРАТЬ
	                    |		МинимальныеЦеныВАптеках.Аптека КАК Аптека,
	                    |		СУММА(МинимальныеЦеныВАптеках.Цена * МинимальныеЦеныВАптеках.Количество) КАК СтоимостьПакета
	                    |	ИЗ
	                    |		МинимальныеЦеныВАптеках КАК МинимальныеЦеныВАптеках
	                    |	
	                    |	СГРУППИРОВАТЬ ПО
	                    |		МинимальныеЦеныВАптеках.Аптека) КАК ВложенныйЗапрос
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	СтоимостьПакета");
	
	Запрос.УстановитьПараметр("Рецепт",Рецепт);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	
	Возврат Результат;		
КонецФункции

Функция ПолучитьДоступностьЛьготныхПрепаратовПоРецепту(Рецепт) Экспорт
	Результат=Новый ТаблицаЗначений;
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ЦеныНаЛекарстваСрезПоследних.Аптека КАК Аптека,
	                    |	ЦеныНаЛекарстваСрезПоследних.Лекарство КАК Лекарство,
	                    |	ЦеныНаЛекарстваСрезПоследних.Цена КАК Цена
	                    |ИЗ
	                    |	Документ.Рецепт.Лекарства КАК РецептЛекарства
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНаЛекарства.СрезПоследних КАК ЦеныНаЛекарстваСрезПоследних
	                    |		ПО РецептЛекарства.Лекарство = ЦеныНаЛекарстваСрезПоследних.Лекарство.МеждународноеНепатентованноеНазвание
	                    |			И РецептЛекарства.Льготное = ЦеныНаЛекарстваСрезПоследних.Лекарство.Льготное
	                    |ГДЕ
	                    |	РецептЛекарства.Льготное
	                    |	И ЦеныНаЛекарстваСрезПоследних.Доступно
	                    |	И РецептЛекарства.Ссылка = &Рецепт");
	
	Запрос.УстановитьПараметр("Рецепт",Рецепт);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Результат=РезультатЗапроса.Выгрузить();	
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ЭтоАРМ() Экспорт
	возврат РежимАРМ();	
КонецФункции

Функция РежимАРМ() Экспорт
	возврат РольДоступна("АРМ");	
КонецФункции

Функция НайтиПациентаПоСНИЛС(СНИЛС) Экспорт
	Результат=Справочники.Пациенты.ПустаяСсылка();
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пациенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Пациенты КАК Пациенты
		|ГДЕ
		|	Пациенты.СНИЛС = &СНИЛС";
	
	Запрос.УстановитьПараметр("СНИЛС", СНИЛС);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат Результат;
	
КонецФункции
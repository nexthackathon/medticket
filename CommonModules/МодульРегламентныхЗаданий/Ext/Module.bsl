
Процедура ПроверитьВозможностьЗаписиНаПрием() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПожеланиеНаПрием.Ссылка КАК ПожеланиеНаПрием,
	               |	ТБлижайшиеСвободныеДатыПриема.БлижайшаяДатаПриема КАК БлижайшаяДатаПриема,
	               |	ПожеланиеНаПрием.Пациент.ОповещатьЭлектроннымПисьмом КАК ОповещатьЭлектроннымПисьмом,
	               |	ПожеланиеНаПрием.Пациент.ОповещатьСМС КАК ОповещатьСМС,
	               |	ПожеланиеНаПрием.Пациент.ЭлектроннаяПочта КАК ЭлектроннаяПочта,
	               |	ПожеланиеНаПрием.Пациент.Телефон КАК Телефон,
	               |	ПожеланиеНаПрием.Пациент.Наименование КАК ИмяПациента,
	               |	ПожеланиеНаПрием.Врач.Наименование КАК ИмяВрача,
	               |	ПожеланиеНаПрием.Врач.Специализация.Наименование КАК СпециализацияВрача
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ГрафикиПриема.Поликлиника КАК Поликлиника,
	               |		ГрафикиПриема.Врач КАК Врач,
	               |		МИНИМУМ(ГрафикиПриема.Дата) КАК БлижайшаяДатаПриема
	               |	ИЗ
	               |		РегистрСведений.ГрафикиПриема КАК ГрафикиПриема
	               |	ГДЕ
	               |		ГрафикиПриема.Дата >= &Дата
	               |		И ГрафикиПриема.Прием = ЗНАЧЕНИЕ(Документ.Прием.ПустаяСсылка)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ГрафикиПриема.Поликлиника,
	               |		ГрафикиПриема.Врач) КАК ТБлижайшиеСвободныеДатыПриема
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПожеланиеНаПрием КАК ПожеланиеНаПрием
	               |		ПО ТБлижайшиеСвободныеДатыПриема.Поликлиника = ПожеланиеНаПрием.Поликлиника
	               |			И ТБлижайшиеСвободныеДатыПриема.Врач = ПожеланиеНаПрием.Врач
	               |ГДЕ
	               |	Не ПожеланиеНаПрием.ПометкаУдаления
	               |	И НЕ ПожеланиеНаПрием.ПациентОповещенОВозможностиЗаписиНаПрием";
	
	Запрос.УстановитьПараметр("Дата", КонецДня(ТекущаяДата())+1);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПожеланиеОбъект = Выборка.ПожеланиеНаПрием.ПолучитьОбъект();
		ПожеланиеОбъект.ПациентОповещенОВозможностиЗаписиНаПрием = Истина;
		ПожеланиеОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		Если Выборка.ОповещатьЭлектроннымПисьмом И ЗначениеЗаполнено(Выборка.ЭлектроннаяПочта) Тогда
			ОтправитьЭлектронноеПисьмоОВозможностиЗаписатьсяНаПрием(Выборка.ЭлектроннаяПочта, 
																	Выборка.ИмяВрача, 
																	Выборка.СпециализацияВрача, 
																	Выборка.БлижайшаяДатаПриема);	
		КонецЕсли;
																
		Если Выборка.ОповещатьСМС И ЗначениеЗаполнено(Выборка.Телефон) Тогда
			ОтправитьСМСОВозможностиЗаписатьсяНаПрием(Выборка.Телефон, 
													  Выборка.ИмяВрача, 
													  Выборка.СпециализацияВрача, 
													  Выборка.БлижайшаяДатаПриема);
		КонецЕсли;
															
	КонецЦикла;
		
КонецПроцедуры

Процедура ОтправитьЭлектронноеПисьмоОВозможностиЗаписатьсяНаПрием(ЭлектроннаяПочта, ИмяВрача, СпециализацияВрача, БлижайшаяДатаПриема)
	
	ТекстПисьма = СтрШаблон("Доступна запись к врачу %1(%2) начиная с %3", ИмяВрача, СпециализацияВрача, Формат(БлижайшаяДатаПриема, "ДФ=dd.MM.yyyy"));
	ЭлектроннаяПочтаКлиентСервер.ОтправитьПисьмо(ЭлектроннаяПочта, "Доступна запись к врачу", ТекстПисьма); 
	
КонецПроцедуры

Процедура ОтправитьСМСОВозможностиЗаписатьсяНаПрием(Телефон, ИмяВрача, СпециализацияВрача, БлижайшаяДатаПриема)
	
	ТекстСМС = СтрШаблон("Доступна запись к врачу %1(%2) начиная с %3", ИмяВрача, СпециализацияВрача, Формат(БлижайшаяДатаПриема, "ДФ=dd.MM.yyyy"));
	ОтправитьСМС(Телефон, ТекстСМС);	
	
КонецПроцедуры

Процедура ОповеститьПациентаОСкидке() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Рецепт.Ссылка КАК Рецепт,
	               |	Рецепт.Номер КАК НомерРецепта,
	               |	Рецепт.Прием.Пациент.ОповещатьЭлектроннымПисьмом КАК ОповещатьЭлектроннымПисьмом,
	               |	Рецепт.Прием.Пациент.ЭлектроннаяПочта КАК ЭлектроннаяПочта,
	               |	Рецепт.Прием.Пациент.Телефон КАК Телефон,
	               |	Рецепт.Прием.Пациент.ОповещатьСМС КАК ОповещатьСМС
	               |ИЗ
	               |	Документ.Рецепт КАК Рецепт
	               |ГДЕ
	               |	НЕ Рецепт.ПациентОповещенОСкидке";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		РецептОбъект = Выборка.Рецепт.ПолучитьОбъект();
		РецептОбъект.ПациентОповещенОСкидке = Истина;
		РецептОбъект.Записать();                                                                        
		
		Если Выборка.ОповещатьЭлектроннымПисьмом И ЗначениеЗаполнено(Выборка.ЭлектроннаяПочта) Тогда
			ОтправитьЭлектронноеПисьмоОСкидке(Выборка.ЭлектроннаяПочта, Выборка.НомерРецепта);
		КонецЕсли;
		
		Если Выборка.ОповещатьСМС И ЗначениеЗаполнено(Выборка.Телефон) Тогда
			ОтправитьСМСОСкидке(Выборка.Телефон, Выборка.НомерРецепта);	
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОтправитьЭлектронноеПисьмоОСкидке(ЭлектроннаяПочта, НомерРецепта)
	
	ТекстПисьма = СтрШаблон("Доступна скидка в партнерских аптеках. Покажите СНИЛС и этот номер: %1", НомерРецепта);
	ЭлектроннаяПочтаКлиентСервер.ОтправитьПисьмо(ЭлектроннаяПочта, "Доступна скидка", ТекстПисьма);	
	
КонецПроцедуры

Процедура ОтправитьСМСОСкидке(Телефон, НомерРецепта) 
	
	ТекстСМС = СтрШаблон("Доступна скидка в партнерских аптеках. Покажите СНИЛС и этот номер: %1", НомерРецепта);
	ОтправитьСМС(Телефон, ТекстСМС);
	
КонецПроцедуры

Функция Отправить_СМС(Логин, Пароль, SMSArray, ИмяОтправ, GMT, ТолькоПроверить)
	Перем Определения;
	Перем Прокси;
	Перем xmlDoc;
	Перем nodeRoot;
	Перем Телефон1;
	Перем ResStruct;
	Перем ResArray;
	Перем Результат;
	Перем k;
	Перем Назначено;
	
	ResArray = новый массив;
	Попытка
		Определения = Новый WSОпределения("http://smpp3.websms.ru:8183/soap?WSDL");	
		Прокси      = Новый WSПрокси(Определения, "http://ws.com/", "WebsmsSoapServService", "WebsmsSoapServPort");
		xmlDoc = Новый COMОбъект("MSXML2.DOMDocument");
		Попытка
			Для k=0 По SMSArray.Количество()-1 Цикл
				Телефон1 = СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(SMSArray[k].Получатель,"-",""),"(",""),")","")," ",""),"+","");	
				Если СтрДлина(Телефон1)>10  тогда
					ResStruct = Новый структура("id, IDСообщения, Состояние, ДатаРассылки"); 
					ResStruct.id = SMSArray[k].id;
					ResStruct.IDСообщения = 0;
					ResStruct.Состояние = "Не отправлено";
					ResStruct.ДатаРассылки = ТекущаяДата();
					Если SMSArray[k].ДатаРассылки = Неопределено Тогда
						Назначено = Формат(ТекущаяДата(),"ДФ=дд.ММ.гггг чч:мм");
					Иначе
						Назначено = Формат(SMSArray[k].ДатаРассылки,"ДФ=дд.ММ.гггг чч:мм");
					КонецЕсли;	
					Результат = Прокси.sendSMS( Логин, Пароль, ИмяОтправ, SMSArray[k].ТекстСообщения, Телефон1, 0, 0, Назначено, GMT, ТолькоПроверить); 
					// Сообщить(Результат);					
					xmlDoc.LoadXML(Результат);
					nodeRoot = xmlDoc.documentElement;
					Для Каждого nod ИЗ nodeRoot.childNodes Цикл
						Для Каждого chNod ИЗ nod.childNodes Цикл
							Если chNod.nodeName = "systemId" тогда 
								ResStruct.IDСообщения = chNod.text;
							КонецЕсли;
							Если chNod.nodeName = "state" тогда 
								ResStruct.Состояние = chNod.text;
								Если chNod.text = "Accepted" Тогда
									Если Число(ResStruct.IDСообщения)>0 Тогда
										ResStruct.Состояние = "Принято системой";
									Иначе
										ResStruct.Состояние = "Проверено";
									КонецЕсли;
								Иначе
									ResStruct.Состояние = "Отклонено";
								КонецЕсли;	
							КонецЕсли;
						КонецЦикла;	
					КонецЦикла;	
					ResArray.Добавить(ResStruct); 
				Иначе	
					Сообщить("Номер не может быть использован при отправке сообщения: "+Телефон1);
				КонецЕсли;
			КонецЦикла;
		Исключение
   			Сообщить(ОписаниеОшибки());
		КонецПопытки;	
	Исключение
	    Сообщить("Соединение с сервером websms не установлено. Проверьте соединение с сетью Интернет!");
	КонецПопытки;	
	
	Прокси = Неопределено;
	Определения = Неопределено;
	xmlDoc = Неопределено;
	Возврат ResArray;
КонецФункции

//отправка через сервис swebsms.ru 
//предварительно нужно зарегистрироваться, полочить логин-пароль, и зарегистрировать номер на который отправлять бесплатные смс
//количество бесплатных смс ограничено 30, в оригинальной обраотке есть команда отправить тест - использует эту функцию
Функция ОтправитьСМС(Получатель, ТекстСообщения) Экспорт
	Перем ИмяОтправ;
	Перем МассивСМС;
	Перем Резлт;
	Перем СтруктСМС; 
	Перем i;
	
	ДатаРассылки = ТекущаяДата()+60*2;
	
	ИД=1;
	
	ИмяОтправ = "WEBSMS";
		
	
	МассивСМС = новый массив;
	
	СтруктСМС = Новый структура("id, Получатель, ТекстСообщения, ДатаРассылки");
	СтруктСМС.id = ИД; 
	СтруктСМС.Получатель = Получатель; 
	СтруктСМС.ТекстСообщения = ТекстСообщения;             
	СтруктСМС.ДатаРассылки = ДатаРассылки;             
	МассивСМС.Добавить(СтруктСМС); 
	
		
	Резлт = Отправить_СМС("nolimits", "parol", МассивСМС, ИмяОтправ, 4, 0); 
	
	//Для i=0 По Резлт.Количество()-1 Цикл
	//	ТЗ_СМС[Резлт[i].id].Состояние    = Резлт[i].Состояние;  
	//	ТЗ_СМС[Резлт[i].id].IDСообщения  = Резлт[i].IDСообщения;  
	//	ТЗ_СМС[Резлт[i].id].ДатаРассылки = Резлт[i].ДатаРассылки;  
	//КонецЦикла;  	
КонецФункции